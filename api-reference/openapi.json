{
  "openapi": "3.0.3",
  "info": {
    "title": "AscendOTT Aggregator Plans API",
    "description": "API description for aggregators to interact with AscendOTT Sites",
    "version": "1.0.0",
    "license": { "name": "MIT" }
  },
  "servers": [
    {
      "url": "{scheme}://{domain}/api/v1/aggregator",
      "variables": {
        "scheme": {
          "enum": ["https", "http"],
          "default": "https",
          "description": "Protocol"
        },
        "domain": {
          "default": "api.example.com",
          "description": "Client API host (e.g., api.client.com)"
        }
      }
    }
  ],
  "security": [
    { "ApiKeyAuth": [] }
  ],

  "tags": [
    { "name": "Plans" },
    { "name": "Subscriptions" }
  ],

  "paths": {
    "/plans": {
      "get": {
        "tags": ["Plans"],
        "summary": "List of plans",
        "description": "Returns all plans from the system that the caller can access.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": { "type": "integer", "format": "int32", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Plan" }
                },
                "examples": {
                  "success": {
                    "value": [
                      {
                        "planCode": "68b74fd80e51671c21e46913",
                        "planTitle": "Standard",
                        "planType": "svod",
                        "description": "This is an invisible plan for Airtel",
                        "identifier": "airtel_6months_399",
                        "billingFrequency": {
                          "value": "months",
                          "is_recurring": false,
                          "multiplier": "1",
                          "_id": "68b74fd80e51671c21e46914"
                        },
                        "canDownload": false,
                        "startDate": "2025-09-03",
                        "endDate": null,
                        "noEndDate": true,
                        "contentIds": [
                          "66fb907f70381480c75da8cc",
                          "66fb9b8970381480c75daaa3",
                          "66fba41d70381480c75dabfc",
                          "66fbaa6370381480c75dacfc",
                          "66fbb8af70381480c75daf52"
                        ],
                        "countries": [
                          { "countryCode": "IN", "costPerBilling": "399" }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden — missing or invalid API key",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "missing":   { "value": { "error": "x-api-key missing" } },
                  "incorrect": { "value": { "error": "x-api-key is incorrect" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "error": { "value": { "error": "Internal Server Error" } }
                }
              }
            }
          }
        }
      }
    },

    "/subscriptions": {
      "get": {
        "tags": ["Subscriptions"],
        "summary": "List Subscriptions",
        "description": "Returns subscriptions. Without query params, returns all accessible subscriptions. With `externalUserId`, returns that user's subscriptions. With `subscriptionId`, returns a single subscription.",
        "parameters": [
          {
            "name": "externalUserId",
            "in": "query",
            "description": "Filter by aggregator's user identifier. If provided (and `subscriptionId` is not), the response is an array.",
            "schema": { "type": "string" }
          },
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Returns a single subscription by its ID. If provided, it takes precedence over `externalUserId`.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Subscription" }
                    },
                    { "$ref": "#/components/schemas/Subscription" }
                  ]
                },
                "examples": {
                  "all": {
                    "summary": "No query string (array of subscriptions)",
                    "value": [
                      {
                        "subscriptionId": "68bbe3343faf938adbc22ba8",
                        "externalUserId": "abcd123",
                        "planCode": "68b74fd80e51671c21e46913",
                        "startDate": "2025-09-06T07:31:00.000Z",
                        "endDate": "2025-10-06T07:31:00.000Z",
                        "device": "android_phone",
                        "status": "completed"
                      },
                      {
                        "subscriptionId": "68bbe61d3faf938adbc22bb6",
                        "externalUserId": "efgh123",
                        "planCode": "68b74fd80e51671c21e46913",
                        "startDate": "2025-09-03T11:30:00.000Z",
                        "endDate": "2025-12-02T11:30:00.000Z",
                        "device": "jio_stb",
                        "status": "completed"
                      }
                    ]
                  },
                  "byExternalUserId": {
                    "summary": "Filtered by externalUserId (array of subscriptions)",
                    "value": [
                      {
                        "subscriptionId": "68bc1ec13faf938adbc22bd2",
                        "externalUserId": "ijkl123",
                        "planCode": "68b74fd80e51671c21e46913",
                        "startDate": "2025-09-03T11:30:00.000Z",
                        "endDate": "2025-12-02T11:30:00.000Z",
                        "device": "jio_stb",
                        "status": "completed"
                      }
                    ]
                  },
                  "bySubscriptionId": {
                    "summary": "Filtered by subscriptionId (single subscription object)",
                    "value": {
                      "subscriptionId": "68bbe3343faf938adbc22ba8",
                      "externalUserId": "abcd123",
                      "planCode": "68b74fd80e51671c21e46913",
                      "startDate": "2025-09-06T07:31:00.000Z",
                      "endDate": "2025-10-06T07:31:00.000Z",
                      "device": "android_phone",
                      "status": "completed"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden — missing or invalid API key",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "missing":   { "value": { "error": "x-api-key missing" } },
                  "incorrect": { "value": { "error": "x-api-key is incorrect" } }
                }
              }
            }
          },
          "404": {
            "description": "Not Found — subscriptionId not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "notFound": { "value": { "error": "subscriptionId not found" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "error": { "value": { "error": "Internal Server Error" } }
                }
              }
            }
          }
        },
        "security": [
          { "ApiKeyAuth": [] }
        ]
      },
      "post": {
        "tags": ["Subscriptions"],
        "summary": "Create Subscription",
        "description": "Creates a new subscription for a user against a given plan.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubscriptionCreateRequest" },
              "examples": {
                "basic": {
                  "value": {
                    "externalUserId": "abcd123",
                    "planCode": "68b74fd80e51671c21e46913",
                    "startDate": "2025-09-03T11:30:00.000Z",
                    "endDate": "2025-12-02T11:30:00.000Z",
                    "device": "android_phone"
                  }
                },
                "minimal": {
                  "summary": "Rely on defaults (start now, device = web_browser, end = plan duration)",
                  "value": {
                    "externalUserId": "abcd123",
                    "planCode": "68b74fd80e51671c21e46913"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Subscription" },
                "examples": {
                  "success": {
                    "value": {
                      "subscriptionId": "sub_01J8Z3Z2Y6M3X4",
                      "externalUserId": "aysgte536d8sgh",
                      "planCode": "configuredPlanCode",
                      "startDate": "2020-09-04T11:23:42.958Z",
                      "endDate": "2020-10-04T11:22:23.958Z",
                      "device": "android_phone",
                      "status": "completed"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request — invalid body or field types",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "invalidDate": { "value": { "error": "startDate must be an ISO 8601 UTC string" } }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden — missing or invalid API key",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "missing":   { "value": { "error": "x-api-key missing" } },
                  "incorrect": { "value": { "error": "x-api-key is incorrect" } }
                }
              }
            }
          },
          "409": {
            "description": "Conflict — subscription already exists or plan constraints violated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "exists": { "value": { "error": "Subscription already exists for user and plan" } }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity — plan/user not found or business rule failed",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "notFound": { "value": { "error": "planCode not found" } }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" },
                "examples": {
                  "error": { "value": { "error": "Internal Server Error" } }
                }
              }
            }
          }
        },
        "security": [
          { "ApiKeyAuth": [] }
        ]
      }
    }
  },

  "components": {
    "securitySchemes": {
      "ApiKeyAuth": { "type": "apiKey", "in": "header", "name": "x-api-key" }
    },
    "schemas": {
      "Plan": {
        "type": "object",
        "properties": {
          "planCode": { "type": "string" },
          "planTitle": { "type": "string" },
          "planType": { "type": "string" },
          "description": { "type": "string", "nullable": true },
          "identifier": { "type": "string" },
          "billingFrequency": {
            "type": "object",
            "properties": {
              "value": { "type": "string" },
              "is_recurring": { "type": "boolean" },
              "multiplier": { "type": "string" },
              "_id": { "type": "string" }
            }
          },
          "canDownload": { "type": "boolean" },
          "startDate": { "type": "string", "format": "date" },
          "endDate": { "type": "string", "format": "date", "nullable": true },
          "noEndDate": { "type": "boolean" },
          "contentIds": {
            "type": "array",
            "items": { "type": "string" }
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "countryCode": { "type": "string" },
                "costPerBilling": { "type": "string" }
              }
            }
          }
        }
      },

      "SubscriptionCreateRequest": {
        "type": "object",
        "required": ["externalUserId", "planCode"],
        "properties": {
          "externalUserId": { "type": "string", "description": "Aggregator's user identifier (stable across calls)." },
          "planCode": { "type": "string", "description": "AscendOTT planCode to subscribe to." },
          "startDate": { "type": "string", "format": "date-time", "description": "UTC ISO8601. Optional. Defaults to current date/time." },
          "endDate": { "type": "string", "format": "date-time", "description": "UTC ISO8601. Optional. Defaults to plan duration." },
          "device": {
            "type": "string",
            "description": "Origin device of the purchase. Optional.",
            "default": "web_browser",
            "enum": [
              "web_browser",
              "android_phone",
              "ios_phone",
              "android_tablet",
              "ios_tablet",
              "android_tv",
              "smart_tv",
              "roku",
              "fire_tv",
              "apple_tv",
              "jio_stb",
              "other"
            ]
          }
        }
      },

      "Subscription": {
        "type": "object",
        "required": ["subscriptionId", "externalUserId", "planCode", "startDate", "endDate", "status"],
        "properties": {
          "subscriptionId": { "type": "string" },
          "externalUserId": { "type": "string" },
          "planCode": { "type": "string" },
          "startDate": { "type": "string", "format": "date-time" },
          "endDate": { "type": "string", "format": "date-time" },
          "device": {
            "type": "string",
            "enum": [
              "web_browser",
              "android_phone",
              "ios_phone",
              "android_tablet",
              "ios_tablet",
              "android_tv",
              "smart_tv",
              "roku",
              "fire_tv",
              "apple_tv",
              "jio_stb",
              "other"
            ]
          },
          "status": { "type": "string", "enum": ["completed", "pending", "cancelled", "expired"] }
        }
      },

      "Error": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": { "type": "string" }
        }
      }
    }
  }
}
